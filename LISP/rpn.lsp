(defun rpn-calc (l1)
	(defvar val-stack nil)
	(rpn-c l1)
	(setq val-stack nil)
)

(defun rpn-c (l)
	(if (eq nil l) 
		(car val-stack)
		(let ()
			(if (or (eq (car l) '+) (eq (car l) '-) (eq (car l) '*) (eq (car l) '/))
				(setq val-stack (cons (funcall (car l) (car val-stack) (cadr val-stack)) (cddr val-stack)))
				(setq val-stack (cons (car l) val-stack))
			)
			(print val-stack)
			(rpn-c (cdr l))
		)
	)
)

(print (rpn-calc '(1 2 + 1 3 + *)))
